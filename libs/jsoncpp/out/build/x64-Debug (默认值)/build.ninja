# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.18

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: JSONCPP
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles\rules.ninja


#############################################
# Utility command for NightlyMemoryCheck

build NightlyMemoryCheck: phony CMakeFiles\NightlyMemoryCheck


#############################################
# Utility command for Experimental

build Experimental: phony CMakeFiles\Experimental


#############################################
# Utility command for ContinuousSubmit

build ContinuousSubmit: phony CMakeFiles\ContinuousSubmit


#############################################
# Utility command for ContinuousConfigure

build ContinuousConfigure: phony CMakeFiles\ContinuousConfigure


#############################################
# Utility command for NightlyTest

build NightlyTest: phony CMakeFiles\NightlyTest


#############################################
# Utility command for NightlyStart

build NightlyStart: phony CMakeFiles\NightlyStart


#############################################
# Utility command for NightlyBuild

build NightlyBuild: phony CMakeFiles\NightlyBuild


#############################################
# Utility command for NightlySubmit

build NightlySubmit: phony CMakeFiles\NightlySubmit


#############################################
# Utility command for NightlyConfigure

build NightlyConfigure: phony CMakeFiles\NightlyConfigure


#############################################
# Utility command for ContinuousTest

build ContinuousTest: phony CMakeFiles\ContinuousTest


#############################################
# Utility command for Continuous

build Continuous: phony CMakeFiles\Continuous


#############################################
# Utility command for Nightly

build Nightly: phony CMakeFiles\Nightly


#############################################
# Utility command for NightlyUpdate

build NightlyUpdate: phony CMakeFiles\NightlyUpdate


#############################################
# Utility command for NightlyCoverage

build NightlyCoverage: phony CMakeFiles\NightlyCoverage


#############################################
# Utility command for NightlyMemCheck

build NightlyMemCheck: phony CMakeFiles\NightlyMemCheck


#############################################
# Utility command for ExperimentalStart

build ExperimentalStart: phony CMakeFiles\ExperimentalStart


#############################################
# Utility command for ExperimentalUpdate

build ExperimentalUpdate: phony CMakeFiles\ExperimentalUpdate


#############################################
# Utility command for ExperimentalConfigure

build ExperimentalConfigure: phony CMakeFiles\ExperimentalConfigure


#############################################
# Utility command for ExperimentalBuild

build ExperimentalBuild: phony CMakeFiles\ExperimentalBuild


#############################################
# Utility command for ExperimentalTest

build ExperimentalTest: phony CMakeFiles\ExperimentalTest


#############################################
# Utility command for ExperimentalCoverage

build ExperimentalCoverage: phony CMakeFiles\ExperimentalCoverage


#############################################
# Utility command for ExperimentalMemCheck

build ExperimentalMemCheck: phony CMakeFiles\ExperimentalMemCheck


#############################################
# Utility command for ExperimentalSubmit

build ExperimentalSubmit: phony CMakeFiles\ExperimentalSubmit


#############################################
# Utility command for ContinuousBuild

build ContinuousBuild: phony CMakeFiles\ContinuousBuild


#############################################
# Utility command for ContinuousStart

build ContinuousStart: phony CMakeFiles\ContinuousStart


#############################################
# Utility command for ContinuousUpdate

build ContinuousUpdate: phony CMakeFiles\ContinuousUpdate


#############################################
# Utility command for ContinuousCoverage

build ContinuousCoverage: phony CMakeFiles\ContinuousCoverage


#############################################
# Utility command for ContinuousMemCheck

build ContinuousMemCheck: phony CMakeFiles\ContinuousMemCheck


#############################################
# Utility command for test

build CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build test: phony CMakeFiles\test.util


#############################################
# Utility command for edit_cache

build CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles\edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles\rebuild_cache.util


#############################################
# Utility command for list_install_components

build list_install_components: phony


#############################################
# Utility command for install

build CMakeFiles\install.util: CUSTOM_COMMAND all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build install: phony CMakeFiles\install.util


#############################################
# Utility command for install/local

build CMakeFiles\install\local.util: CUSTOM_COMMAND all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build install\local: phony CMakeFiles\install\local.util


#############################################
# Custom command for CMakeFiles\NightlyMemoryCheck

build CMakeFiles\NightlyMemoryCheck: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyMemoryCheck"
  pool = console


#############################################
# Custom command for CMakeFiles\Experimental

build CMakeFiles\Experimental: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D Experimental"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousSubmit

build CMakeFiles\ContinuousSubmit: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousSubmit"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousConfigure

build CMakeFiles\ContinuousConfigure: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousConfigure"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyTest

build CMakeFiles\NightlyTest: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyTest"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyStart

build CMakeFiles\NightlyStart: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyStart"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyBuild

build CMakeFiles\NightlyBuild: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyBuild"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlySubmit

build CMakeFiles\NightlySubmit: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlySubmit"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyConfigure

build CMakeFiles\NightlyConfigure: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyConfigure"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousTest

build CMakeFiles\ContinuousTest: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousTest"
  pool = console


#############################################
# Custom command for CMakeFiles\Continuous

build CMakeFiles\Continuous: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D Continuous"
  pool = console


#############################################
# Custom command for CMakeFiles\Nightly

build CMakeFiles\Nightly: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D Nightly"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyUpdate

build CMakeFiles\NightlyUpdate: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyUpdate"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyCoverage

build CMakeFiles\NightlyCoverage: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyCoverage"
  pool = console


#############################################
# Custom command for CMakeFiles\NightlyMemCheck

build CMakeFiles\NightlyMemCheck: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D NightlyMemCheck"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalStart

build CMakeFiles\ExperimentalStart: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalStart"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalUpdate

build CMakeFiles\ExperimentalUpdate: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalUpdate"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalConfigure

build CMakeFiles\ExperimentalConfigure: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalConfigure"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalBuild

build CMakeFiles\ExperimentalBuild: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalBuild"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalTest

build CMakeFiles\ExperimentalTest: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalTest"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalCoverage

build CMakeFiles\ExperimentalCoverage: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalCoverage"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalMemCheck

build CMakeFiles\ExperimentalMemCheck: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalMemCheck"
  pool = console


#############################################
# Custom command for CMakeFiles\ExperimentalSubmit

build CMakeFiles\ExperimentalSubmit: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ExperimentalSubmit"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousBuild

build CMakeFiles\ContinuousBuild: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousBuild"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousStart

build CMakeFiles\ContinuousStart: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousStart"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousUpdate

build CMakeFiles\ContinuousUpdate: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousUpdate"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousCoverage

build CMakeFiles\ContinuousCoverage: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousCoverage"
  pool = console


#############################################
# Custom command for CMakeFiles\ContinuousMemCheck

build CMakeFiles\ContinuousMemCheck: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" -D ContinuousMemCheck"
  pool = console

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for rebuild_cache

build src\CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build src\rebuild_cache: phony src\CMakeFiles\rebuild_cache.util


#############################################
# Utility command for test

build src\CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build src\test: phony src\CMakeFiles\test.util


#############################################
# Utility command for install/local

build src\CMakeFiles\install\local.util: CUSTOM_COMMAND src\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build src\install\local: phony src\CMakeFiles\install\local.util


#############################################
# Utility command for install

build src\CMakeFiles\install.util: CUSTOM_COMMAND src\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build src\install: phony src\CMakeFiles\install.util


#############################################
# Utility command for edit_cache

build src\CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build src\edit_cache: phony src\CMakeFiles\edit_cache.util


#############################################
# Utility command for list_install_components

build src\list_install_components: phony

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/src/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for STATIC_LIBRARY target jsoncpp_lib


#############################################
# Order-only phony target for jsoncpp_lib

build cmake_object_order_depends_target_jsoncpp_lib: phony || src\lib_json\CMakeFiles\jsoncpp_lib.dir

build src\lib_json\CMakeFiles\jsoncpp_lib.dir\json_reader.cpp.obj: CXX_COMPILER__jsoncpp_lib_Debug ..\..\..\src\lib_json\json_reader.cpp || cmake_object_order_depends_target_jsoncpp_lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  OBJECT_FILE_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  TARGET_COMPILE_PDB = src\lib_json\CMakeFiles\jsoncpp_lib.dir\jsoncpp_lib.pdb
  TARGET_PDB = bin\jsoncpp.pdb

build src\lib_json\CMakeFiles\jsoncpp_lib.dir\json_value.cpp.obj: CXX_COMPILER__jsoncpp_lib_Debug ..\..\..\src\lib_json\json_value.cpp || cmake_object_order_depends_target_jsoncpp_lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  OBJECT_FILE_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  TARGET_COMPILE_PDB = src\lib_json\CMakeFiles\jsoncpp_lib.dir\jsoncpp_lib.pdb
  TARGET_PDB = bin\jsoncpp.pdb

build src\lib_json\CMakeFiles\jsoncpp_lib.dir\json_writer.cpp.obj: CXX_COMPILER__jsoncpp_lib_Debug ..\..\..\src\lib_json\json_writer.cpp || cmake_object_order_depends_target_jsoncpp_lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  OBJECT_FILE_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  TARGET_COMPILE_PDB = src\lib_json\CMakeFiles\jsoncpp_lib.dir\jsoncpp_lib.pdb
  TARGET_PDB = bin\jsoncpp.pdb


# =============================================================================
# Link build statements for STATIC_LIBRARY target jsoncpp_lib


#############################################
# Link the static library lib\jsoncpp.lib

build lib\jsoncpp.lib: CXX_STATIC_LIBRARY_LINKER__jsoncpp_lib_Debug src\lib_json\CMakeFiles\jsoncpp_lib.dir\json_reader.cpp.obj src\lib_json\CMakeFiles\jsoncpp_lib.dir\json_value.cpp.obj src\lib_json\CMakeFiles\jsoncpp_lib.dir\json_writer.cpp.obj
  LANGUAGE_COMPILE_FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64
  OBJECT_DIR = src\lib_json\CMakeFiles\jsoncpp_lib.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = src\lib_json\CMakeFiles\jsoncpp_lib.dir\jsoncpp_lib.pdb
  TARGET_FILE = lib\jsoncpp.lib
  TARGET_PDB = bin\jsoncpp.pdb


#############################################
# Utility command for rebuild_cache

build src\lib_json\CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build src\lib_json\rebuild_cache: phony src\lib_json\CMakeFiles\rebuild_cache.util


#############################################
# Utility command for test

build src\lib_json\CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build src\lib_json\test: phony src\lib_json\CMakeFiles\test.util


#############################################
# Utility command for install/local

build src\lib_json\CMakeFiles\install\local.util: CUSTOM_COMMAND src\lib_json\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build src\lib_json\install\local: phony src\lib_json\CMakeFiles\install\local.util


#############################################
# Utility command for install

build src\lib_json\CMakeFiles\install.util: CUSTOM_COMMAND src\lib_json\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build src\lib_json\install: phony src\lib_json\CMakeFiles\install.util


#############################################
# Utility command for edit_cache

build src\lib_json\CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build src\lib_json\edit_cache: phony src\lib_json\CMakeFiles\edit_cache.util


#############################################
# Utility command for list_install_components

build src\lib_json\list_install_components: phony

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/src/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target jsontestrunner_exe


#############################################
# Order-only phony target for jsontestrunner_exe

build cmake_object_order_depends_target_jsontestrunner_exe: phony || cmake_object_order_depends_target_jsoncpp_lib

build src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir\main.cpp.obj: CXX_COMPILER__jsontestrunner_exe_Debug ..\..\..\src\jsontestrunner\main.cpp || cmake_object_order_depends_target_jsontestrunner_exe
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir
  OBJECT_FILE_DIR = src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir
  TARGET_COMPILE_PDB = src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir\
  TARGET_PDB = bin\jsontestrunner_exe.pdb


# =============================================================================
# Link build statements for EXECUTABLE target jsontestrunner_exe


#############################################
# Link the executable bin\jsontestrunner_exe.exe

build bin\jsontestrunner_exe.exe: CXX_EXECUTABLE_LINKER__jsontestrunner_exe_Debug src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir\main.cpp.obj | lib\jsoncpp.lib || lib\jsoncpp.lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = lib\jsoncpp.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = src\jsontestrunner\CMakeFiles\jsontestrunner_exe.dir\
  TARGET_FILE = bin\jsontestrunner_exe.exe
  TARGET_IMPLIB = lib\jsontestrunner_exe.lib
  TARGET_PDB = bin\jsontestrunner_exe.pdb


#############################################
# Utility command for jsoncpp_readerwriter_tests

build src\jsontestrunner\jsoncpp_readerwriter_tests: phony src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests bin\jsoncpp_test.exe bin\jsontestrunner_exe.exe


#############################################
# Utility command for jsoncpp_check

build src\jsontestrunner\jsoncpp_check: phony src\jsontestrunner\CMakeFiles\jsoncpp_check src\jsontestrunner\jsoncpp_readerwriter_tests


#############################################
# Utility command for rebuild_cache

build src\jsontestrunner\CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\jsontestrunner" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build src\jsontestrunner\rebuild_cache: phony src\jsontestrunner\CMakeFiles\rebuild_cache.util


#############################################
# Utility command for test

build src\jsontestrunner\CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\jsontestrunner" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build src\jsontestrunner\test: phony src\jsontestrunner\CMakeFiles\test.util


#############################################
# Utility command for install/local

build src\jsontestrunner\CMakeFiles\install\local.util: CUSTOM_COMMAND src\jsontestrunner\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\jsontestrunner" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build src\jsontestrunner\install\local: phony src\jsontestrunner\CMakeFiles\install\local.util


#############################################
# Utility command for install

build src\jsontestrunner\CMakeFiles\install.util: CUSTOM_COMMAND src\jsontestrunner\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\jsontestrunner" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build src\jsontestrunner\install: phony src\jsontestrunner\CMakeFiles\install.util


#############################################
# Utility command for edit_cache

build src\jsontestrunner\CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\jsontestrunner" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build src\jsontestrunner\edit_cache: phony src\jsontestrunner\CMakeFiles\edit_cache.util


#############################################
# Utility command for list_install_components

build src\jsontestrunner\list_install_components: phony


#############################################
# Custom command for src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests

build src\jsontestrunner\CMakeFiles\jsoncpp_readerwriter_tests: CUSTOM_COMMAND bin\jsontestrunner_exe.exe bin\jsoncpp_test.exe || bin\jsoncpp_test.exe bin\jsontestrunner_exe.exe lib\jsoncpp.lib
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\jsontestrunner" && "C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.7_3.7.2544.0_x64__qbz5n2kfra8p0\python.exe" -B C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/src/jsontestrunner/../../test/runjsontests.py "C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/bin/jsontestrunner_exe.exe" C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/src/jsontestrunner/../../test/data"


#############################################
# Phony custom command for src\jsontestrunner\CMakeFiles\jsoncpp_check

build src\jsontestrunner\CMakeFiles\jsoncpp_check: phony || bin\jsoncpp_test.exe bin\jsontestrunner_exe.exe lib\jsoncpp.lib src\jsontestrunner\jsoncpp_readerwriter_tests

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/src/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for rebuild_cache

build src\test_lib_json\CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\test_lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build src\test_lib_json\rebuild_cache: phony src\test_lib_json\CMakeFiles\rebuild_cache.util


#############################################
# Utility command for test

build src\test_lib_json\CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\test_lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build src\test_lib_json\test: phony src\test_lib_json\CMakeFiles\test.util

# =============================================================================
# Object build statements for EXECUTABLE target jsoncpp_test


#############################################
# Order-only phony target for jsoncpp_test

build cmake_object_order_depends_target_jsoncpp_test: phony || cmake_object_order_depends_target_jsoncpp_lib

build src\test_lib_json\CMakeFiles\jsoncpp_test.dir\jsontest.cpp.obj: CXX_COMPILER__jsoncpp_test_Debug ..\..\..\src\test_lib_json\jsontest.cpp || cmake_object_order_depends_target_jsoncpp_test
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  OBJECT_FILE_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  TARGET_COMPILE_PDB = src\test_lib_json\CMakeFiles\jsoncpp_test.dir\
  TARGET_PDB = bin\jsoncpp_test.pdb

build src\test_lib_json\CMakeFiles\jsoncpp_test.dir\fuzz.cpp.obj: CXX_COMPILER__jsoncpp_test_Debug ..\..\..\src\test_lib_json\fuzz.cpp || cmake_object_order_depends_target_jsoncpp_test
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  OBJECT_FILE_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  TARGET_COMPILE_PDB = src\test_lib_json\CMakeFiles\jsoncpp_test.dir\
  TARGET_PDB = bin\jsoncpp_test.pdb

build src\test_lib_json\CMakeFiles\jsoncpp_test.dir\main.cpp.obj: CXX_COMPILER__jsoncpp_test_Debug ..\..\..\src\test_lib_json\main.cpp || cmake_object_order_depends_target_jsoncpp_test
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  OBJECT_FILE_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  TARGET_COMPILE_PDB = src\test_lib_json\CMakeFiles\jsoncpp_test.dir\
  TARGET_PDB = bin\jsoncpp_test.pdb


# =============================================================================
# Link build statements for EXECUTABLE target jsoncpp_test


#############################################
# Link the executable bin\jsoncpp_test.exe

build bin\jsoncpp_test.exe: CXX_EXECUTABLE_LINKER__jsoncpp_test_Debug src\test_lib_json\CMakeFiles\jsoncpp_test.dir\jsontest.cpp.obj src\test_lib_json\CMakeFiles\jsoncpp_test.dir\fuzz.cpp.obj src\test_lib_json\CMakeFiles\jsoncpp_test.dir\main.cpp.obj | lib\jsoncpp.lib || lib\jsoncpp.lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = lib\jsoncpp.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = src\test_lib_json\CMakeFiles\jsoncpp_test.dir
  POST_BUILD = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\test_lib_json" && "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\bin\jsoncpp_test.exe""
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = src\test_lib_json\CMakeFiles\jsoncpp_test.dir\
  TARGET_FILE = bin\jsoncpp_test.exe
  TARGET_IMPLIB = lib\jsoncpp_test.lib
  TARGET_PDB = bin\jsoncpp_test.pdb


#############################################
# Utility command for install/local

build src\test_lib_json\CMakeFiles\install\local.util: CUSTOM_COMMAND src\test_lib_json\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\test_lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build src\test_lib_json\install\local: phony src\test_lib_json\CMakeFiles\install\local.util


#############################################
# Utility command for install

build src\test_lib_json\CMakeFiles\install.util: CUSTOM_COMMAND src\test_lib_json\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\test_lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build src\test_lib_json\install: phony src\test_lib_json\CMakeFiles\install.util


#############################################
# Utility command for edit_cache

build src\test_lib_json\CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\src\test_lib_json" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build src\test_lib_json\edit_cache: phony src\test_lib_json\CMakeFiles\edit_cache.util


#############################################
# Utility command for list_install_components

build src\test_lib_json\list_install_components: phony

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for rebuild_cache

build include\CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\include" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build include\rebuild_cache: phony include\CMakeFiles\rebuild_cache.util


#############################################
# Utility command for test

build include\CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\include" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build include\test: phony include\CMakeFiles\test.util


#############################################
# Utility command for install/local

build include\CMakeFiles\install\local.util: CUSTOM_COMMAND include\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\include" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build include\install\local: phony include\CMakeFiles\install\local.util


#############################################
# Utility command for install

build include\CMakeFiles\install.util: CUSTOM_COMMAND include\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\include" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build include\install: phony include\CMakeFiles\install.util


#############################################
# Utility command for edit_cache

build include\CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\include" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build include\edit_cache: phony include\CMakeFiles\edit_cache.util


#############################################
# Utility command for list_install_components

build include\list_install_components: phony

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target readFromString


#############################################
# Order-only phony target for readFromString

build cmake_object_order_depends_target_readFromString: phony || cmake_object_order_depends_target_jsoncpp_lib

build example\CMakeFiles\readFromString.dir\readFromString\readFromString.cpp.obj: CXX_COMPILER__readFromString_Debug ..\..\..\example\readFromString\readFromString.cpp || cmake_object_order_depends_target_readFromString
  DEFINES = -D_CRT_SECURE_NO_WARNINGS -D_GLIBCXX_USE_CXX11_ABI -D_SCL_SECURE_NO_WARNINGS -D_WIN32_WINNT=0x601 -D_WINSOCK_DEPRECATED_NO_WARNINGS
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = example\CMakeFiles\readFromString.dir
  OBJECT_FILE_DIR = example\CMakeFiles\readFromString.dir\readFromString
  TARGET_COMPILE_PDB = example\CMakeFiles\readFromString.dir\
  TARGET_PDB = bin\readFromString.pdb


# =============================================================================
# Link build statements for EXECUTABLE target readFromString


#############################################
# Link the executable bin\readFromString.exe

build bin\readFromString.exe: CXX_EXECUTABLE_LINKER__readFromString_Debug example\CMakeFiles\readFromString.dir\readFromString\readFromString.cpp.obj | lib\jsoncpp.lib || lib\jsoncpp.lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = lib\jsoncpp.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = example\CMakeFiles\readFromString.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = example\CMakeFiles\readFromString.dir\
  TARGET_FILE = bin\readFromString.exe
  TARGET_IMPLIB = lib\readFromString.lib
  TARGET_PDB = bin\readFromString.pdb


#############################################
# Utility command for edit_cache

build example\CMakeFiles\edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\example" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build example\edit_cache: phony example\CMakeFiles\edit_cache.util


#############################################
# Utility command for rebuild_cache

build example\CMakeFiles\rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\example" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" --regenerate-during-build -SC:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp -B"C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build example\rebuild_cache: phony example\CMakeFiles\rebuild_cache.util


#############################################
# Utility command for test

build example\CMakeFiles\test.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\example" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\ctest.exe" --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build example\test: phony example\CMakeFiles\test.util

# =============================================================================
# Object build statements for EXECUTABLE target readFromStream


#############################################
# Order-only phony target for readFromStream

build cmake_object_order_depends_target_readFromStream: phony || cmake_object_order_depends_target_jsoncpp_lib

build example\CMakeFiles\readFromStream.dir\readFromStream\readFromStream.cpp.obj: CXX_COMPILER__readFromStream_Debug ..\..\..\example\readFromStream\readFromStream.cpp || cmake_object_order_depends_target_readFromStream
  DEFINES = -D_CRT_SECURE_NO_WARNINGS -D_GLIBCXX_USE_CXX11_ABI -D_SCL_SECURE_NO_WARNINGS -D_WIN32_WINNT=0x601 -D_WINSOCK_DEPRECATED_NO_WARNINGS
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = example\CMakeFiles\readFromStream.dir
  OBJECT_FILE_DIR = example\CMakeFiles\readFromStream.dir\readFromStream
  TARGET_COMPILE_PDB = example\CMakeFiles\readFromStream.dir\
  TARGET_PDB = bin\readFromStream.pdb


# =============================================================================
# Link build statements for EXECUTABLE target readFromStream


#############################################
# Link the executable bin\readFromStream.exe

build bin\readFromStream.exe: CXX_EXECUTABLE_LINKER__readFromStream_Debug example\CMakeFiles\readFromStream.dir\readFromStream\readFromStream.cpp.obj | lib\jsoncpp.lib || lib\jsoncpp.lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = lib\jsoncpp.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = example\CMakeFiles\readFromStream.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = example\CMakeFiles\readFromStream.dir\
  TARGET_FILE = bin\readFromStream.exe
  TARGET_IMPLIB = lib\readFromStream.lib
  TARGET_PDB = bin\readFromStream.pdb

# =============================================================================
# Object build statements for EXECUTABLE target stringWrite


#############################################
# Order-only phony target for stringWrite

build cmake_object_order_depends_target_stringWrite: phony || cmake_object_order_depends_target_jsoncpp_lib

build example\CMakeFiles\stringWrite.dir\stringWrite\stringWrite.cpp.obj: CXX_COMPILER__stringWrite_Debug ..\..\..\example\stringWrite\stringWrite.cpp || cmake_object_order_depends_target_stringWrite
  DEFINES = -D_CRT_SECURE_NO_WARNINGS -D_GLIBCXX_USE_CXX11_ABI -D_SCL_SECURE_NO_WARNINGS -D_WIN32_WINNT=0x601 -D_WINSOCK_DEPRECATED_NO_WARNINGS
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = example\CMakeFiles\stringWrite.dir
  OBJECT_FILE_DIR = example\CMakeFiles\stringWrite.dir\stringWrite
  TARGET_COMPILE_PDB = example\CMakeFiles\stringWrite.dir\
  TARGET_PDB = bin\stringWrite.pdb


# =============================================================================
# Link build statements for EXECUTABLE target stringWrite


#############################################
# Link the executable bin\stringWrite.exe

build bin\stringWrite.exe: CXX_EXECUTABLE_LINKER__stringWrite_Debug example\CMakeFiles\stringWrite.dir\stringWrite\stringWrite.cpp.obj | lib\jsoncpp.lib || lib\jsoncpp.lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = lib\jsoncpp.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = example\CMakeFiles\stringWrite.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = example\CMakeFiles\stringWrite.dir\
  TARGET_FILE = bin\stringWrite.exe
  TARGET_IMPLIB = lib\stringWrite.lib
  TARGET_PDB = bin\stringWrite.pdb

# =============================================================================
# Object build statements for EXECUTABLE target streamWrite


#############################################
# Order-only phony target for streamWrite

build cmake_object_order_depends_target_streamWrite: phony || cmake_object_order_depends_target_jsoncpp_lib

build example\CMakeFiles\streamWrite.dir\streamWrite\streamWrite.cpp.obj: CXX_COMPILER__streamWrite_Debug ..\..\..\example\streamWrite\streamWrite.cpp || cmake_object_order_depends_target_streamWrite
  DEFINES = -D_CRT_SECURE_NO_WARNINGS -D_GLIBCXX_USE_CXX11_ABI -D_SCL_SECURE_NO_WARNINGS -D_WIN32_WINNT=0x601 -D_WINSOCK_DEPRECATED_NO_WARNINGS
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1 /W4 /WX
  INCLUDES = -I\include -I..\..\..\include -I..\..\..\src\lib_json\..\..\include -Iinclude\json
  OBJECT_DIR = example\CMakeFiles\streamWrite.dir
  OBJECT_FILE_DIR = example\CMakeFiles\streamWrite.dir\streamWrite
  TARGET_COMPILE_PDB = example\CMakeFiles\streamWrite.dir\
  TARGET_PDB = bin\streamWrite.pdb


# =============================================================================
# Link build statements for EXECUTABLE target streamWrite


#############################################
# Link the executable bin\streamWrite.exe

build bin\streamWrite.exe: CXX_EXECUTABLE_LINKER__streamWrite_Debug example\CMakeFiles\streamWrite.dir\streamWrite\streamWrite.cpp.obj | lib\jsoncpp.lib || lib\jsoncpp.lib
  FLAGS = /DWIN32 /D_WINDOWS /W3 /GR /EHsc /MDd /Zi /Ob0 /Od /RTC1
  LINK_FLAGS = /machine:x64 /debug /INCREMENTAL /subsystem:console
  LINK_LIBRARIES = lib\jsoncpp.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib
  OBJECT_DIR = example\CMakeFiles\streamWrite.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = example\CMakeFiles\streamWrite.dir\
  TARGET_FILE = bin\streamWrite.exe
  TARGET_IMPLIB = lib\streamWrite.lib
  TARGET_PDB = bin\streamWrite.pdb


#############################################
# Utility command for list_install_components

build example\list_install_components: phony


#############################################
# Utility command for examples

build example\examples: phony example\CMakeFiles\examples bin\readFromStream.exe bin\readFromString.exe bin\streamWrite.exe bin\stringWrite.exe


#############################################
# Utility command for install

build example\CMakeFiles\install.util: CUSTOM_COMMAND example\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\example" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build example\install: phony example\CMakeFiles\install.util


#############################################
# Utility command for install/local

build example\CMakeFiles\install\local.util: CUSTOM_COMMAND example\all
  COMMAND = cmd.exe /C "cd /D "C:\Users\lenovo\Documents\Github\msdos-rpg\libs\jsoncpp\out\build\x64-Debug (默认值)\example" && "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe" -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build example\install\local: phony example\CMakeFiles\install\local.util


#############################################
# Phony custom command for example\CMakeFiles\examples

build example\CMakeFiles\examples: phony bin\readFromString.exe bin\readFromStream.exe bin\stringWrite.exe bin\streamWrite.exe || bin\readFromStream.exe bin\readFromString.exe bin\streamWrite.exe bin\stringWrite.exe lib\jsoncpp.lib

# =============================================================================
# Target aliases.

build examples: phony example\examples

build jsoncpp.lib: phony lib\jsoncpp.lib

build jsoncpp_check: phony src\jsontestrunner\jsoncpp_check

build jsoncpp_lib: phony lib\jsoncpp.lib

build jsoncpp_readerwriter_tests: phony src\jsontestrunner\jsoncpp_readerwriter_tests

build jsoncpp_test: phony bin\jsoncpp_test.exe

build jsoncpp_test.exe: phony bin\jsoncpp_test.exe

build jsontestrunner_exe: phony bin\jsontestrunner_exe.exe

build jsontestrunner_exe.exe: phony bin\jsontestrunner_exe.exe

build readFromStream: phony bin\readFromStream.exe

build readFromStream.exe: phony bin\readFromStream.exe

build readFromString: phony bin\readFromString.exe

build readFromString.exe: phony bin\readFromString.exe

build streamWrite: phony bin\streamWrite.exe

build streamWrite.exe: phony bin\streamWrite.exe

build stringWrite: phony bin\stringWrite.exe

build stringWrite.exe: phony bin\stringWrite.exe

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)

build all: phony src\all include\all example\all

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/example

build example\all: phony bin\readFromString.exe bin\readFromStream.exe bin\stringWrite.exe bin\streamWrite.exe example\examples

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/include

build include\all: phony

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/src

build src\all: phony src\lib_json\all src\jsontestrunner\all src\test_lib_json\all

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/src/jsontestrunner

build src\jsontestrunner\all: phony bin\jsontestrunner_exe.exe

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/src/lib_json

build src\lib_json\all: phony lib\jsoncpp.lib

# =============================================================================

#############################################
# Folder: C:/Users/lenovo/Documents/Github/msdos-rpg/libs/jsoncpp/out/build/x64-Debug (默认值)/src/test_lib_json

build src\test_lib_json\all: phony bin\jsoncpp_test.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ..\..\..\CMakeLists.txt ..\..\..\example\CMakeLists.txt ..\..\..\include\CMakeLists.txt ..\..\..\pkg-config\jsoncpp.pc.in ..\..\..\src\CMakeLists.txt ..\..\..\src\jsontestrunner\CMakeLists.txt ..\..\..\src\lib_json\CMakeLists.txt ..\..\..\src\test_lib_json\CMakeLists.txt ..\..\..\version.in C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\BasicConfigVersion-SameMajorVersion.cmake.in C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeCXXInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeGenericSystem.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakePackageConfigHelpers.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeRCInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CTest.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CTestTargets.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CTestUseLaunchers.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckCSourceCompiles.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckCXXSourceCompiles.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckCXXSymbolExists.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckIncludeFile.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckIncludeFileCXX.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckStructHasMember.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckSymbolExists.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckTypeSize.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\DartConfiguration.tcl.in C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPython3.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPython\Support.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\GNUInstallDirs.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\Windows.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\WriteBasicConfigVersionFile.cmake CMakeCache.txt CMakeFiles\3.18.20081302-MSVC_2\CMakeCXXCompiler.cmake CMakeFiles\3.18.20081302-MSVC_2\CMakeRCCompiler.cmake CMakeFiles\3.18.20081302-MSVC_2\CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build ..\..\..\CMakeLists.txt ..\..\..\example\CMakeLists.txt ..\..\..\include\CMakeLists.txt ..\..\..\pkg-config\jsoncpp.pc.in ..\..\..\src\CMakeLists.txt ..\..\..\src\jsontestrunner\CMakeLists.txt ..\..\..\src\lib_json\CMakeLists.txt ..\..\..\src\test_lib_json\CMakeLists.txt ..\..\..\version.in C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\BasicConfigVersion-SameMajorVersion.cmake.in C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeCXXInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeCommonLanguageInclude.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeGenericSystem.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeInitializeConfigs.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeLanguageInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakePackageConfigHelpers.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeRCInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInformation.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CMakeSystemSpecificInitialize.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CTest.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CTestTargets.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CTestUseLaunchers.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckCSourceCompiles.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckCXXSourceCompiles.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckCXXSymbolExists.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckIncludeFile.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckIncludeFileCXX.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckStructHasMember.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckSymbolExists.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\CheckTypeSize.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Compiler\CMakeCommonCompilerMacros.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Compiler\MSVC-CXX.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\DartConfiguration.tcl.in C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPackageHandleStandardArgs.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPackageMessage.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPython3.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\FindPython\Support.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\GNUInstallDirs.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC-CXX.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\Windows-MSVC.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\Windows.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\Platform\WindowsPaths.cmake C$:\Program$ Files$ (x86)\Microsoft$ Visual$ Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\share\cmake-3.18\Modules\WriteBasicConfigVersionFile.cmake CMakeCache.txt CMakeFiles\3.18.20081302-MSVC_2\CMakeCXXCompiler.cmake CMakeFiles\3.18.20081302-MSVC_2\CMakeRCCompiler.cmake CMakeFiles\3.18.20081302-MSVC_2\CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
